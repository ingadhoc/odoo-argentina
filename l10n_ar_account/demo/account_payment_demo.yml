# payment parcial de gritti
-
  !python {model: ir.model.data} : |
      payment_journal_id = self.pool['account.journal'].search(cr, uid, [('type', '=', 'bank')], limit=1)
      payment_journal = self.pool['account.journal'].browse(cr, uid, payment_journal_id)
      if payment_journal and payment_journal.inbound_payment_method_ids:
        payment_vals = {
          'partner_id': ref('l10n_ar_partner.res_partner_gritti_agrimensura'),
          'payment_type': 'inbound',
          'journal_id': payment_journal.id,
          'partner_type': 'customer',
          'invoice_ids': [(6, 0, [ref('demo_invoice_1')])],
          'amount': 500.0,
          'payment_method_id': payment_journal.inbound_payment_method_ids[0].id,
        }
        payment_id = self.pool['account.payment'].create(cr, uid, payment_vals)
        self.pool['account.payment'].post(cr, uid, payment_id)
# payment total de consumidor final
-
  !python {model: ir.model.data} : |
      payment_journal_id = self.pool['account.journal'].search(cr, uid, [('type', '=', 'cash')], limit=1)
      payment_journal = self.pool['account.journal'].browse(cr, uid, payment_journal_id)
      if payment_journal and payment_journal.inbound_payment_method_ids:
        payment_vals = {
          'partner_id': ref('l10n_ar_account.par_cfa'),
          'payment_type': 'inbound',
          'journal_id': payment_journal.id,
          'partner_type': 'customer',
          'invoice_ids': [(6, 0, [ref('demo_invoice_8')])],
          'amount': 776.82,
          'payment_method_id': payment_journal.inbound_payment_method_ids[0].id,
        }
        payment_id = self.pool['account.payment'].create(cr, uid, payment_vals)
        self.pool['account.payment'].post(cr, uid, payment_id)
# payment a cuenta de cerro castor
-
  !python {model: ir.model.data} : |
      payment_journal_id = self.pool['account.journal'].search(cr, uid, [('type', '=', 'bank')], limit=1)
      payment_journal = self.pool['account.journal'].browse(cr, uid, payment_journal_id)
      if payment_journal and payment_journal.inbound_payment_method_ids:
        payment_vals = {
          'partner_id': ref('l10n_ar_partner.res_partner_cerrocastor'),
          'payment_type': 'inbound',
          'journal_id': payment_journal.id,
          'partner_type': 'customer',
          'amount': 1000.0,
          'payment_method_id': payment_journal.inbound_payment_method_ids[0].id,
        }
        payment_id = self.pool['account.payment'].create(cr, uid, payment_vals)
        self.pool['account.payment'].post(cr, uid, payment_id)
# payment factura a asustek
-
  !python {model: ir.model.data} : |
      payment_journal_id = self.pool['account.journal'].search(cr, uid, [('type', '=', 'bank')], limit=1)
      payment_journal = self.pool['account.journal'].browse(cr, uid, payment_journal_id)
      if payment_journal and payment_journal.outbound_payment_method_ids:
        payment_vals = {
          'partner_id': ref('base.res_partner_1'),
          'payment_type': 'outbound',
          'journal_id': payment_journal.id,
          'partner_type': 'supplier',
          'invoice_ids': [(6, 0, [ref('demo_sup_invoice_2')])],
          'amount': 8254.20,
          'payment_method_id': payment_journal.outbound_payment_method_ids[0].id,
        }
        payment_id = self.pool['account.payment'].create(cr, uid, payment_vals)
        self.pool['account.payment'].post(cr, uid, payment_id)
# payment parcial a odoo
-
  !python {model: ir.model.data} : |
      payment_journal_id = self.pool['account.journal'].search(cr, uid, [('type', '=', 'cash')], limit=1)
      payment_journal = self.pool['account.journal'].browse(cr, uid, payment_journal_id)
      if payment_journal and payment_journal.outbound_payment_method_ids:
        payment_vals = {
          'partner_id': ref('l10n_ar_partner.res_partner_odoo'),
          'payment_type': 'outbound',
          'journal_id': payment_journal.id,
          'partner_type': 'supplier',
          'invoice_ids': [(6, 0, [ref('demo_sup_invoice_6')])],
          'amount': 2000.0,
          'payment_method_id': payment_journal.outbound_payment_method_ids[0].id,
        }
        payment_id = self.pool['account.payment'].create(cr, uid, payment_vals)
        self.pool['account.payment'].post(cr, uid, payment_id)
# payment a cuenta deltapc
-
  !python {model: ir.model.data} : |
      payment_journal_id = self.pool['account.journal'].search(cr, uid, [('type', '=', 'bank')], limit=1)
      payment_journal = self.pool['account.journal'].browse(cr, uid, payment_journal_id)
      if payment_journal and payment_journal.outbound_payment_method_ids:
        payment_vals = {
          'partner_id': ref('base.res_partner_4'),
          'payment_type': 'outbound',
          'journal_id': payment_journal.id,
          'partner_type': 'supplier',
          'amount': 1000.0,
          'payment_method_id': payment_journal.outbound_payment_method_ids[0].id,
        }
        payment_id = self.pool['account.payment'].create(cr, uid, payment_vals)
        self.pool['account.payment'].post(cr, uid, payment_id)