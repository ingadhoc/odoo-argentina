-
   Set the context for customer invoices because the 'type' field is readonly in invoice form views, so it value won't be considered by the yaml import
-
  !context
    type: 'out_invoice'
-
   Invoice to gritti support service, vat 21
-
  !record {model: account.invoice, id: demo_invoice_1}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_gritti_agrimensura
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Support Services'
        product_id: product.product_product_2
        price_unit: 642.0
        quantity: 1
    # al final no lo hicimos porque necesitamos los ref y no los tenemos
    # deberiamos hacer un search
    # simulamos agregado manual de impuestos
    # tax_line_ids:
    #   - name: 'Retda dsada'
    #     tax_id: product.product_product_2
    #     amount: 642.0
    #     manual: True
    #     sequence: 99
    #     account_id: 99
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_1}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_1')).id]"
-
   Invoice to CMR with vat 21, 27 and 10,5
-
  !record {model: account.invoice, id: demo_invoice_2}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_cmr
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Dell Inspiron Laptop without OS (IVA 21)'
        product_id: product.product_product_49
        price_unit: 642.0
        quantity: 5
      - name: 'Servicio de telefonía (IVA 27)'
        product_id: l10n_ar_account.product_product_telefonia
        price_unit: 250.0
        quantity: 1.0
      - name: 'Laptop E5023 (IVA 10,5)'
        product_id: product.product_product_25
        price_unit: 3245.0
        quantity: 2.0
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_2}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_2')).id]"
-
   Invoice to ADHOC with vat cero and 21 (requires fiscal position, setted manually)
-
  !record {model: account.invoice, id: demo_invoice_3}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Dell Inspiron Laptop without OS (IVA 21)'
        product_id: product.product_product_49
        price_unit: 642.0
        quantity: 5
      - name: 'Animales y vegetales no industrializados (IVA cero)'
        product_id: l10n_ar_account.product_product_cero
        price_unit: 200.0
        quantity: 1.0
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_3}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_3')).id]"
-
  !python {model: ir.model.data} : |
      position_id = self.pool.get('account.fiscal.position').search(cr, uid, [('name', '=', 'No gravado')])
      if position_id:
          self.pool['account.invoice'].write(cr, uid, ref('demo_invoice_3'), {'fiscal_position_id': position_id[0]})
-
   Invoice to ADHOC with vat exempt and 21 (requires fiscal position, setted manually)
-
  !record {model: account.invoice, id: demo_invoice_4}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Dell Inspiron Laptop without OS (IVA 21)'
        product_id: product.product_product_49
        price_unit: 642.0
        quantity: 5
      - name: 'Libro "Desarrollo en Odoo" (IVA exento)'
        product_id: l10n_ar_account.product_product_exento
        price_unit: 100.0
        quantity: 1.0
-
  !python {model: ir.model.data} : |
      position_id = self.pool.get('account.fiscal.position').search(cr, uid, [('name', '=', 'No gravado')])
      if position_id:
          self.pool['account.invoice'].write(cr, uid, ref('demo_invoice_4'), {'fiscal_position_id': position_id[0]})
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_4}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_4')).id]"
-
   Invoice to ADHOC with all type of taxes (requires fiscal position, setted manually)
-
  !record {model: account.invoice, id: demo_invoice_5}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Dell Inspiron Laptop without OS (IVA 21)'
        product_id: product.product_product_49
        price_unit: 642.0
        quantity: 5
      - name: 'Servicio de telefonía (IVA 27)'
        product_id: l10n_ar_account.product_product_telefonia
        price_unit: 250.0
        quantity: 1.0
      - name: 'Laptop E5023 (IVA 10,5)'
        product_id: product.product_product_25
        price_unit: 3245.0
        quantity: 2.0
      - name: 'Conceptos no gravados (IVA NG)'
        product_id: l10n_ar_account.product_product_no_gravado
        price_unit: 50.0
        quantity: 10.0
      - name: 'Animales y vegetales no industrializados (IVA cero)'
        product_id: l10n_ar_account.product_product_cero
        price_unit: 200.0
        quantity: 1.0
      - name: 'Libro "Desarrollo en Odoo" (IVA exento)'
        product_id: l10n_ar_account.product_product_exento
        price_unit: 100.0
        quantity: 1.0
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_5}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_5')).id]"
-
  We add fiscal position
-
  !python {model: ir.model.data} : |
      position_id = self.pool.get('account.fiscal.position').search(cr, uid, [('name', '=', 'No gravado')])
      if position_id:
          self.pool['account.invoice'].write(cr, uid, ref('demo_invoice_5'), {'fiscal_position_id': position_id[0]})
-
  La invoice 6 y 7 es la de expo pero la llevamos a otro archivo
-
   Invoice to consumidor final
-
  !record {model: account.invoice, id: demo_invoice_8}:
    company_id: base.main_company
    partner_id: l10n_ar_account.par_cfa
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Support Services'
        product_id: product.product_product_2
        price_unit: 642.0
        quantity: 1
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_8}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_8')).id]"
-
  La invoice 9 es ticket z y esta en otro archivo
-
   Invoice to ADHOC in USD and vat 21
-
  !record {model: account.invoice, id: demo_invoice_10}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    currency_id: base.USD
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Dell Inspiron Laptop without OS (IVA 21)'
        product_id: product.product_product_49
        price_unit: 1000.0
        quantity: 5
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_10}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_10')).id]"
-
   Invoice to ADHOC con muchas lineas para probar rounding "ERROR 1" (ver readme), con 4 ya daria error (precision decimal de monedas y producto en 2)
-
  !record {model: account.invoice, id: demo_invoice_11}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Support Services 1'
        product_id: product.product_product_2
        price_unit: 1.12
        quantity: 1
      - name: 'Support Services 2'
        product_id: product.product_product_2
        price_unit: 1.12
        quantity: 1
      - name: 'Support Services 3'
        product_id: product.product_product_2
        price_unit: 1.12
        quantity: 1
      - name: 'Support Services 4'
        product_id: product.product_product_2
        price_unit: 1.12
        quantity: 1
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_11}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_11')).id]"
-
   Invoice to ADHOC con muchas lineas para probar rounding "ERROR 2" (ver readme), (se requiere usar precision decimal de precio producto en 4 para que de el error)
-
  !record {model: account.invoice, id: demo_invoice_12}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Support Services 1'
        product_id: product.product_product_2
        price_unit: 15.7076
        quantity: 1
      - name: 'Support Services 2'
        product_id: product.product_product_2
        price_unit: 5.3076
        quantity: 2
      - name: 'Support Services 3'
        product_id: product.product_product_2
        price_unit: 3.5384
        quantity: 2
      - name: 'Support Services 4'
        product_id: product.product_product_2
        price_unit: 1.6376
        quantity: 2
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_12}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_12')).id]"
-
   Invoice to ADHOC con muchas lineas para probar factura en cero y rounding "ERROR 3" (ver readme), (se requiere usar precision decimal de precio producto en 4 para que de el error)
   # TODO mejorar este caso demo porque con dos decimales queda en negativo
-
  !record {model: account.invoice, id: demo_invoice_13}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Support Services 1'
        product_id: product.product_product_2
        price_unit: 24.3
        quantity: 3
      - name: 'Support Services 2'
        product_id: product.product_product_2
        price_unit: 260.6
        quantity: -1
      - name: 'Support Services 3'
        product_id: product.product_product_2
        price_unit: 48.72
        quantity: 1
      - name: 'Support Services 4'
        product_id: product.product_product_2
        price_unit: 13.666
        quantity: 1
      - name: 'Support Services 5'
        product_id: product.product_product_2
        price_unit: 11.329
        quantity: 2
      - name: 'Support Services 6'
        product_id: product.product_product_2
        price_unit: 68.9408
        quantity: 1
      - name: 'Support Services 7'
        product_id: product.product_product_2
        price_unit: 4.7881
        quantity: 2
      - name: 'Support Services 8'
        product_id: product.product_product_2
        price_unit: 12.0625
        quantity: 2
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_13}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_13')).id]"
-
  !python {model: ir.model.data} : |
      position_id = self.pool.get('account.fiscal.position').search(cr, uid, [('name', '=', 'No gravado')])
      if position_id:
          self.pool['account.invoice'].write(cr, uid, ref('demo_invoice_13'), {'fiscal_position_id': position_id[0]})
# 14, 15 y 16 son de expo
-
   Invoice to ADHOC con 100% de descuento (para testear citi)
-
  !record {model: account.invoice, id: demo_invoice_17}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Support Services 1'
        product_id: product.product_product_2
        discount: 100.0
        price_unit: 24.3
        quantity: 3
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_17}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_17')).id]"
-
  !python {model: ir.model.data} : |
      position_id = self.pool.get('account.fiscal.position').search(cr, uid, [('name', '=', 'No gravado')])
      if position_id:
          self.pool['account.invoice'].write(cr, uid, ref('demo_invoice_17'), {'fiscal_position_id': position_id[0]})
-
   Invoice to ADHOC con 100% de descuento en ivas distintos (para testear citi)
   y con linea de importe
-
  !record {model: account.invoice, id: demo_invoice_18}:
    company_id: base.main_company
    partner_id: l10n_ar_partner.res_partner_adhoc
    user_id: base.user_demo
    reference_type: none
    payment_term_id: account.account_payment_term
    type: 'out_invoice'
    invoice_line_ids:
      - name: 'Support Services 1'
        product_id: product.product_product_2
        discount: 100.0
        price_unit: 24.3
        quantity: 3
      - name: 'Servicio de telefonía (IVA 27)'
        product_id: l10n_ar_account.product_product_telefonia
        price_unit: 250.0
        discount: 100.0
        quantity: 1.0
      - name: 'Laptop E5023 (IVA 10,5)'
        product_id: product.product_product_25
        price_unit: 3245.0
        quantity: 2.0
-
  !function {model: account.invoice, name: compute_taxes, id: demo_invoice_18}:
  - model: account.invoice
    eval: "[obj(ref('demo_invoice_18')).id]"
-
  !python {model: ir.model.data} : |
      position_id = self.pool.get('account.fiscal.position').search(cr, uid, [('name', '=', 'No gravado')])
      if position_id:
          self.pool['account.invoice'].write(cr, uid, ref('demo_invoice_18'), {'fiscal_position_id': position_id[0]})
